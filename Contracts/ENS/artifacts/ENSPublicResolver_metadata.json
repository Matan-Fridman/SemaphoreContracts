{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "AddrChanged",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					}
				],
				"name": "addr",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "node",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "setAddr",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "A simplified version of the official ENS Public Resolver contract supporting `addr` and `setAddr`.",
			"kind": "dev",
			"methods": {
				"addr(bytes32)": {
					"details": "Returns the address associated with an ENS node.",
					"params": {
						"node": "The ENS node to query."
					},
					"returns": {
						"_0": "The associated address."
					}
				},
				"setAddr(bytes32,address)": {
					"details": "Sets the address associated with an ENS node.",
					"params": {
						"addr": "The address to set.",
						"node": "The node to update."
					}
				}
			},
			"title": "ENSPublicResolver",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Contracts/Resolver.sol": "ENSPublicResolver"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"Contracts/Resolver.sol": {
			"keccak256": "0x6474e68e053ce1b59fa4d6f9b79b7821bb73be36d1fe2857eaf059922b71bfe2",
			"license": "MIT",
			"urls": [
				"bzz-raw://743cc43b07ff8dc49b77e9a1fa53893ba7068d00778d078bcd20742e1fc5e119",
				"dweb:/ipfs/QmcjDKdAcqbvSP2Ys4dqvGQiuZABTvtN2muGxxd5EmAtXs"
			]
		}
	},
	"version": 1
}